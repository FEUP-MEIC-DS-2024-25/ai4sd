import { StrykerOptions } from '@stryker-mutator/api/core';
import type { requireResolve } from '@stryker-mutator/util';
import type * as jestModule from 'jest';
export declare function determineResolveFromDirectory(options: StrykerOptions, resolve: (moduleId: string) => string): string;
export declare namespace determineResolveFromDirectory {
    var inject: readonly ["options", "resolve"];
}
type RunCli = typeof jestModule.runCLI;
type GetVersion = typeof jestModule.getVersion;
/**
 * Direct stubbing on jest is no longer possible since jest > 25
 */
export declare class JestWrapper {
    private readonly jest;
    static readonly inject: readonly ["resolveFromDirectory", "requireFromCwd"];
    constructor(resolveFromDirectory: string, requireFrom: typeof requireResolve);
    runCLI(...args: Parameters<typeof jestModule.runCLI>): ReturnType<RunCli>;
    getVersion(...args: Parameters<GetVersion>): ReturnType<GetVersion>;
}
export {};
//# sourceMappingURL=jest-wrapper.d.ts.map