{"version":3,"names":["_helperPluginUtils","require","_core","_default","exports","default","declare","api","assertVersion","TOP_LEVEL_USING","Map","isUsingDeclaration","node","t","isVariableDeclaration","kind","has","transformUsingDeclarationsVisitor","ForOfStatement","path","left","id","declarations","tmpId","scope","generateUidIdentifierBasedOnNode","ensureBlock","body","unshift","variableDeclaration","variableDeclarator","cloneNode","BlockStatement|StaticBlock","state","availableHelper","ctx","needsAwait","_ctx","generateUidIdentifier","isAwaitUsing","get","delete","decl","init","callExpression","memberExpression","identifier","disposeCall","replacement","template","statement","ast","addHelper","awaitExpression","inherits","parentPath","isFunction","isTryStatement","isCatchClause","replaceWith","blockStatement","isStaticBlock","stackId","_stackId","forEach","args","push","booleanLiteral","errorId","hasErrorId","block","SwitchStatement","cases","c","stmt","consequent","_ctx2","traverse","VariableDeclaration","buildCodeFrameError","transformUsingDeclarationsVisitorSkipFn","visitors","merge","Function","skip","name","manipulateOptions","_","p","plugins","visitor","Program","clear","sourceType","some","innerBlockBody","isFunctionDeclaration","isImportDeclaration","shouldRemove","isExportDefaultDeclaration","_varId","declaration","varId","isClassDeclaration","toExpression","isExpression","exportNamedDeclaration","exportSpecifier","isExportNamedDeclaration","Object","keys","getOuterBindingIdentifiers","map","isExportDeclaration","set","remove","pushContainer","async"],"sources":["../src/index.ts"],"sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\";\nimport { types as t, template, traverse } from \"@babel/core\";\nimport type { NodePath, Visitor, PluginPass } from \"@babel/core\";\n\nconst enum USING_KIND {\n  NORMAL,\n  AWAIT,\n}\n\nexport default declare(api => {\n  api.assertVersion(REQUIRED_VERSION(\"^7.22.0\"));\n\n  const TOP_LEVEL_USING = new Map<t.Node, USING_KIND>();\n\n  function isUsingDeclaration(node: t.Node): node is t.VariableDeclaration {\n    if (!t.isVariableDeclaration(node)) return false;\n    return (\n      node.kind === \"using\" ||\n      node.kind === \"await using\" ||\n      TOP_LEVEL_USING.has(node)\n    );\n  }\n\n  const transformUsingDeclarationsVisitor: Visitor<PluginPass> = {\n    ForOfStatement(path: NodePath<t.ForOfStatement>) {\n      const { left } = path.node;\n      if (!isUsingDeclaration(left)) return;\n\n      const { id } = left.declarations[0];\n      const tmpId = path.scope.generateUidIdentifierBasedOnNode(id);\n      left.declarations[0].id = tmpId;\n      left.kind = \"const\";\n\n      path.ensureBlock();\n      path.node.body.body.unshift(\n        t.variableDeclaration(\"using\", [\n          t.variableDeclarator(id, t.cloneNode(tmpId)),\n        ]),\n      );\n    },\n    \"BlockStatement|StaticBlock\"(\n      path: NodePath<t.BlockStatement | t.StaticBlock>,\n      state,\n    ) {\n      if (process.env.BABEL_8_BREAKING || state.availableHelper(\"usingCtx\")) {\n        let ctx: t.Identifier | null = null;\n        let needsAwait = false;\n\n        for (const node of path.node.body) {\n          if (!isUsingDeclaration(node)) continue;\n          ctx ??= path.scope.generateUidIdentifier(\"usingCtx\");\n          const isAwaitUsing =\n            node.kind === \"await using\" ||\n            TOP_LEVEL_USING.get(node) === USING_KIND.AWAIT;\n          needsAwait ||= isAwaitUsing;\n\n          if (!TOP_LEVEL_USING.delete(node)) {\n            node.kind = \"const\";\n          }\n          for (const decl of node.declarations) {\n            decl.init = t.callExpression(\n              t.memberExpression(\n                t.cloneNode(ctx),\n                isAwaitUsing ? t.identifier(\"a\") : t.identifier(\"u\"),\n              ),\n              [decl.init],\n            );\n          }\n        }\n        if (!ctx) return;\n\n        const disposeCall = t.callExpression(\n          t.memberExpression(t.cloneNode(ctx), t.identifier(\"d\")),\n          [],\n        );\n\n        const replacement = template.statement.ast`\n        try {\n          var ${t.cloneNode(ctx)} = ${state.addHelper(\"usingCtx\")}();\n          ${path.node.body}\n        } catch (_) {\n          ${t.cloneNode(ctx)}.e = _;\n        } finally {\n          ${needsAwait ? t.awaitExpression(disposeCall) : disposeCall}\n        }\n      ` as t.TryStatement;\n\n        t.inherits(replacement, path.node);\n\n        const { parentPath } = path;\n        if (\n          parentPath.isFunction() ||\n          parentPath.isTryStatement() ||\n          parentPath.isCatchClause()\n        ) {\n          path.replaceWith(t.blockStatement([replacement]));\n        } else if (path.isStaticBlock()) {\n          path.node.body = [replacement];\n        } else {\n          path.replaceWith(replacement);\n        }\n      } else {\n        let stackId: t.Identifier | null = null;\n        let needsAwait = false;\n\n        for (const node of path.node.body) {\n          if (!isUsingDeclaration(node)) continue;\n          stackId ??= path.scope.generateUidIdentifier(\"stack\");\n          const isAwaitUsing =\n            node.kind === \"await using\" ||\n            TOP_LEVEL_USING.get(node) === USING_KIND.AWAIT;\n          needsAwait ||= isAwaitUsing;\n\n          if (!TOP_LEVEL_USING.delete(node)) {\n            node.kind = \"const\";\n          }\n          node.declarations.forEach(decl => {\n            const args = [t.cloneNode(stackId), decl.init];\n            if (isAwaitUsing) args.push(t.booleanLiteral(true));\n            decl.init = t.callExpression(state.addHelper(\"using\"), args);\n          });\n        }\n        if (!stackId) return;\n\n        const errorId = path.scope.generateUidIdentifier(\"error\");\n        const hasErrorId = path.scope.generateUidIdentifier(\"hasError\");\n\n        let disposeCall: t.Expression = t.callExpression(\n          state.addHelper(\"dispose\"),\n          [t.cloneNode(stackId), t.cloneNode(errorId), t.cloneNode(hasErrorId)],\n        );\n        if (needsAwait) disposeCall = t.awaitExpression(disposeCall);\n\n        const replacement = template.statement.ast`\n        try {\n          var ${stackId} = [];\n          ${path.node.body}\n        } catch (_) {\n          var ${errorId} = _;\n          var ${hasErrorId} = true;\n        } finally {\n          ${disposeCall}\n        }\n      ` as t.TryStatement;\n\n        t.inherits(replacement.block, path.node);\n\n        const { parentPath } = path;\n        if (\n          parentPath.isFunction() ||\n          parentPath.isTryStatement() ||\n          parentPath.isCatchClause()\n        ) {\n          path.replaceWith(t.blockStatement([replacement]));\n        } else if (path.isStaticBlock()) {\n          path.node.body = [replacement];\n        } else {\n          path.replaceWith(replacement);\n        }\n      }\n    },\n    SwitchStatement(path, state) {\n      let ctx: t.Identifier | null = null;\n      let needsAwait = false;\n\n      const { cases } = path.node;\n      for (const c of cases) {\n        for (const stmt of c.consequent) {\n          if (isUsingDeclaration(stmt)) {\n            if (\n              !process.env.BABEL_8_BREAKING &&\n              !state.availableHelper(\"usingCtx\")\n            ) {\n              path.traverse({\n                VariableDeclaration(path) {\n                  const { node } = path;\n                  if (!isUsingDeclaration(node)) return;\n                  throw path.buildCodeFrameError(\n                    \"`using` declarations inside `switch` statements are not supported by your current `@babel/core` version, please update to a more recent one\",\n                  );\n                },\n              });\n            }\n\n            ctx ??= path.scope.generateUidIdentifier(\"usingCtx\");\n\n            const isAwaitUsing = stmt.kind === \"await using\";\n            needsAwait ||= isAwaitUsing;\n\n            stmt.kind = \"const\";\n            for (const decl of stmt.declarations) {\n              decl.init = t.callExpression(\n                t.memberExpression(\n                  t.cloneNode(ctx),\n                  isAwaitUsing ? t.identifier(\"a\") : t.identifier(\"u\"),\n                ),\n                [decl.init],\n              );\n            }\n          }\n        }\n      }\n      if (!ctx) return;\n\n      const disposeCall = t.callExpression(\n        t.memberExpression(t.cloneNode(ctx), t.identifier(\"d\")),\n        [],\n      );\n\n      const replacement = template.statement.ast`\n        try {\n          var ${t.cloneNode(ctx)} = ${state.addHelper(\"usingCtx\")}();\n          ${path.node}\n        } catch (_) {\n          ${t.cloneNode(ctx)}.e = _;\n        } finally {\n          ${needsAwait ? t.awaitExpression(disposeCall) : disposeCall}\n        }\n      ` as t.TryStatement;\n\n      t.inherits(replacement, path.node);\n\n      path.replaceWith(replacement);\n    },\n  };\n\n  const transformUsingDeclarationsVisitorSkipFn: Visitor<PluginPass> =\n    traverse.visitors.merge([\n      transformUsingDeclarationsVisitor,\n      {\n        Function(path) {\n          path.skip();\n        },\n      },\n    ]);\n\n  return {\n    name: \"proposal-explicit-resource-management\",\n    manipulateOptions: (_, p) => p.plugins.push(\"explicitResourceManagement\"),\n\n    visitor: traverse.visitors.merge([\n      transformUsingDeclarationsVisitor,\n      {\n        // To transform top-level using declarations, we must wrap the\n        // module body in a block after hoisting all the exports and imports.\n        // This might cause some variables to be `undefined` rather than TDZ.\n        Program(path) {\n          TOP_LEVEL_USING.clear();\n\n          if (path.node.sourceType !== \"module\") return;\n          if (!path.node.body.some(isUsingDeclaration)) return;\n\n          const innerBlockBody = [];\n          for (const stmt of path.get(\"body\")) {\n            if (stmt.isFunctionDeclaration() || stmt.isImportDeclaration()) {\n              continue;\n            }\n\n            let node: t.Statement | t.Declaration = stmt.node;\n            let shouldRemove = true;\n\n            if (stmt.isExportDefaultDeclaration()) {\n              let { declaration } = stmt.node;\n              let varId;\n              if (t.isClassDeclaration(declaration)) {\n                varId = declaration.id;\n                declaration.id = null;\n                declaration = t.toExpression(declaration);\n              } else if (!t.isExpression(declaration)) {\n                continue;\n              }\n\n              varId ??= path.scope.generateUidIdentifier(\"_default\");\n              innerBlockBody.push(\n                t.variableDeclaration(\"var\", [\n                  t.variableDeclarator(varId, declaration),\n                ]),\n              );\n              stmt.replaceWith(\n                t.exportNamedDeclaration(null, [\n                  t.exportSpecifier(\n                    t.cloneNode(varId),\n                    t.identifier(\"default\"),\n                  ),\n                ]),\n              );\n              continue;\n            }\n\n            if (stmt.isExportNamedDeclaration()) {\n              node = stmt.node.declaration;\n              if (!node || t.isFunction(node)) continue;\n\n              stmt.replaceWith(\n                t.exportNamedDeclaration(\n                  null,\n                  Object.keys(t.getOuterBindingIdentifiers(node, false)).map(\n                    id => t.exportSpecifier(t.identifier(id), t.identifier(id)),\n                  ),\n                ),\n              );\n              shouldRemove = false;\n            } else if (stmt.isExportDeclaration()) {\n              continue;\n            }\n\n            if (t.isClassDeclaration(node)) {\n              const { id } = node;\n              node.id = null;\n              innerBlockBody.push(\n                t.variableDeclaration(\"var\", [\n                  t.variableDeclarator(id, t.toExpression(node)),\n                ]),\n              );\n            } else if (t.isVariableDeclaration(node)) {\n              if (node.kind === \"using\") {\n                TOP_LEVEL_USING.set(stmt.node, USING_KIND.NORMAL);\n              } else if (node.kind === \"await using\") {\n                TOP_LEVEL_USING.set(stmt.node, USING_KIND.AWAIT);\n              }\n              node.kind = \"var\";\n              innerBlockBody.push(node);\n            } else {\n              innerBlockBody.push(stmt.node);\n            }\n\n            if (shouldRemove) stmt.remove();\n          }\n\n          path.pushContainer(\"body\", t.blockStatement(innerBlockBody));\n        },\n        // We must transform `await using` in async functions before that\n        // async-to-generator will transform `await` expressions into `yield`\n        Function(path, state) {\n          if (path.node.async) {\n            path.traverse(transformUsingDeclarationsVisitorSkipFn, state);\n          }\n        },\n      },\n    ]),\n  };\n});\n"],"mappings":"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","ignoreList":[]}