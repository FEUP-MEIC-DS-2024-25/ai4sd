// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "texes.proto" (package "proto", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TeXesService } from "./texes";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { TeXesResponse } from "./texes";
import type { Question } from "./texes";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service proto.TeXesService
 */
export interface ITeXesServiceClient {
    /**
     * @generated from protobuf rpc: Chat(proto.Question) returns (proto.TeXesResponse);
     */
    chat(input: Question, options?: RpcOptions): UnaryCall<Question, TeXesResponse>;
}
/**
 * @generated from protobuf service proto.TeXesService
 */
export class TeXesServiceClient implements ITeXesServiceClient, ServiceInfo {
    typeName = TeXesService.typeName;
    methods = TeXesService.methods;
    options = TeXesService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Chat(proto.Question) returns (proto.TeXesResponse);
     */
    chat(input: Question, options?: RpcOptions): UnaryCall<Question, TeXesResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Question, TeXesResponse>("unary", this._transport, method, opt, input);
    }
}
